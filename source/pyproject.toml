[tool.poetry]
name = "board-game"
version = "0.1.0"
description = "Application to create and play your board game."
authors = ["YuriMotoshima <yurimotoshima@gmail.com>"]
license = "MPL"
readme = "README.md"
package-mode = false 


[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.113.0"
sqlalchemy = {extras = ["aiomysql", "asyncpg"], version = "^2.0.34"}
pydantic-settings = "^2.4.0"
uvicorn = "^0.30.6"
geocoder = "^1.38.1"
pydantic = {extras = ["email"], version = "^2.9.1"}
pwdlib = {extras = ["argon2"], version = "^0.2.1"}
httpx = "^0.27.2"
pyjwt = "^2.9.0"
python-multipart = "^0.0.17"
asyncpg = "^0.29.0"
aiomysql = "^0.2.0"


[tool.poetry.group.dev.dependencies]
taskipy = "^1.13.0"
pytest = "^8.3.2"
isort = "^5.13.2"
pytest-cov = "^5.0.0"
aiosqlite = "^0.20.0"
pytest-asyncio = "^0.24.0"
factory-boy = "^3.3.1"
gevent = "^24.10.3"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.coverage.poetry]
enabled = true


[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.report]
show_missing = true
fail_under = 80  # Pode ajustar conforme o nível desejado de cobertura mínima
skip_covered = true  # Isso evitará mostrar linhas já cobertas


[tool.coverage.run]
concurrency = ["gevent"]
source = ["app"]
omit = [
    "config/*",
    "images/*",
    "*/__init__.py",
]


[tool.taskipy.tasks]
test = 'pytest -s -x --cov=app -vv'
post_test = 'coverage html'
clear = "isort . && powershell -Command \"Get-ChildItem -Path . -Recurse -Directory -Filter '__pycache__' | Remove-Item -Recurse -Force;Get-ChildItem -Path . -Recurse -Directory -Filter '.pytest_cache' | Remove-Item -Recurse -Force; Get-ChildItem -Path . -Recurse -Directory -Filter 'logs' | Remove-Item -Recurse -Force; Get-ChildItem -Path . -Recurse -Directory -Filter 'htmlcov' | Remove-Item -Recurse -Force\""
